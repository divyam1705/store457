// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store{
  id  String  @id @default(dbgenerated("uuid_generate_v1()"))
  name  String
  userId  String
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[] @relation("StoreToCategory")
  sizes Size[] @relation("StoreToSize")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard{
  id  String @id @default(uuid())
  storeId String
  store  Store @relation("StoreToBillboard",fields: [storeId],references: [id])
  label String
  imageUrl String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categories Category[]
  @@index([storeId])
}

model Category{
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCategory",fields: [storeId],references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId],references: [id])
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])

}

model Size{
    id String @id @default(uuid())
    storeId String
    store Store @relation("StoreToSize",fields:[storeId],references: [id])
    name String
    value String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([storeId])
}